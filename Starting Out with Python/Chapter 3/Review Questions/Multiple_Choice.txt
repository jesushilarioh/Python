1. A __DECISION__ structure can execute a set of statements only 
    under certain circumstances.
a. sequence
b. circumstantial
c. decision 
d. Boolean

2. A __SINGLE ALTERNATIVE DECISION STRUCTURE__ structure provides 
    one alternative path of execution. 
a. sequence
b. single alternative decision 
c. one path alternative
d. single execution decision

3. A(n) __BOOLEAN__ expression has a value of either True or False. 
a. binary
b. decision
c. unconditional 
d. Boolean

4. The symbols >, <, and == are all __RELATIONAL__ operators. 
a. relational
b. logical
c. conditional 
d. ternary

5. A(n) __DUAL ALTERNATIVE DECISION__ structure tests a condition 
    and then takes one path if the condition is true, or another path 
    if the condition is false.
a. if statement
b. single alternative decision
c. dual alternative decision 
d. sequence

6. You use a(n) __IF__ statement to write a single alternative 
    decision structure. 
a. test-jump
b. if
c. if-else
d. if-call

7. You use a(n) __IF-ELSE__ statement to write a dual alternative 
    decision structure. 
a. test-jump
b. if
c. if-else
d. if-call

8. and, or, and not are __LOGICAL__ operators. 
a. relational
b. logical
c. conditional 
d. ternary

9. A compound Boolean expression created with the __AND__ operator 
    is true only if both of its subexpressions are true.
a. and
b. or
c. not 
d. both

10. A compound Boolean expression created with the __OR__ operator 
    is true if either of its subexpressions is true.
a. and
b. or
c. not
d. either

11. The __NOT__ operator takes a Boolean expression as its 
    operand and reverses its logical value.
a. and
b. or
c. not
d. either

12. A __FLAG__ is a Boolean variable that signals when 
    some condition exists in the program.
a. flag
b. signal 
c. sentinel 
d. siren