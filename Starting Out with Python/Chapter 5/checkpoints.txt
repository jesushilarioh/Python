5.1 What is a function?
A function is a group of statements that exist within a program for the purpose of performing a specific task.

5.2 What is meant by the phrase "divide and conquer"?
It is meant when a large task is divided into several smaller tasks that are easily performed.

5.3 How do functions help you reuse code in a program?
If a specific operation is performed in several places in a program, a function can be written once to perform that operation, then be executed any time it is needed. 

5.4 How can functions make the development of multiple programs faster?
Functions can be written for the commonly needed tasks, and those functions can be incorporated into each program that needs them.

5.5 How can functions make it easier for programs to be developed by teams of programmers?
When a program is developed as a set of functions that each performs an individual task, then different programmers can be assigned the job of writing different functions.

5.6 A function definition has what two parts?
a. The function header
b. The function block

5.7 What does the phrase “calling a function” mean?
Calling a function means to execute a function.

5.8 When a function is executing, what happens when the end of the function’s block is reached?
The function returns, allowing the interpreter to jump back to the part of the program that called the function, and the program resumes it's execution at that point. 

5.9 Why must you indent the statements in a block?
An error will occur if you do not. 

5.10 What is a local variable? How is access to a local variable restricted?
A local variable belongs to the function in which it is created, and only statements inside that function can access the variable.

5.11 What is a variable’s scope?
A variable's scope is the part of a program in which the variable may be accessed. Further, a variable is visible only to statements in the variable's scope. A local variable's scope is the function in which the variable is created.

5.12 Is it permissible for a local variable in one function to have the same name as a local variable in a different function?
Because a function's local variables are hidden from other functions, the other functions may have their own local variables with the same name.

5.13 What are the pieces of data that are passed into a function called?
An argument is any piece of data that is passed into a function when the function is called.

5.14 What are the variables that receive pieces of data in a function called?
A PARAMETER is a variavble that receives an argument (pieces of data) that is passed into a function.

5.15 What is a parameter variable’s scope?
A PARAMETER VARIABLE'S SCOPE is a function in which the parameter is used.

5.16 When a parameter is changed, does this affect the argument that was passed into the parameter?
Any changes made to the parameter variable will not affect the argument.

5.17 The following statements call a function named show_data. Which of the statements passes arguments by position, and which passes keyword arguments? 
a. show_data(name='Kathryn', age=25) This on passes keyword arguments
b. show_data('Kathryn', 25) This one passes arguments by position

5.18 What is the scope of a global variable?
A global variable is accessible to all the functions in a program file.

5.19 Give one good reason that you should not use global variables in a program.
a. Global variables make debugging difficult.
b. Functions that use global variables are usually dependent on those variables.
c. Global variables make a program hard to understand.

5.20 What is a global constant? Is it permissible to use global constants in a program?
Although you should try to avoid the use of global variables, it is permissible to use global constants in a program.

5.21 How does a value-returning function differ from the void functions?
A value-returning function returns a value back to the part of the program that called it.

5.22 What is a library function?
A library function is a pre-written standard library function that is provided by python.

5.23 Why are library functions like “black boxes”?
Library functions are like 'black boxes' because you don't see the internal workings of them.

5.24 What does the following statement do?
x = random.randint(1, 100)
It assigns a random number within the range of 1 to 100 to the variable x.


5.25 What does the following statement do?
print(random.randint(1, 20))
It prints a random number within the range of 1 to 20.


5.26 What does the following statement do?
print(random.randrange(10, 20))
It prints a random number in th range of 10 up to, but not including 20.


5.27 What does the following statement do?
print(random.random())
It prints a floating-point number in the range of 0.0 up to 1.0 (but not including 1.0).


5.28 What does the following statement do?
print(random.uniform(0.1, 0.5))
It prints a random floating-point number in the range of 0.1 through 0.5.


5.29 When the random module is imported, what does it use as a seed value for
random number generation?
It uses the system time from the computer's internal clock as a seed value for random number generation.


5.30 What happens if the same seed value is always used for generating random numbers?
If the same seed value were always used, the random number functions would always generate the same series of pseudorandom numbers.


5.31 What is the purpose of the return statement in a function?
To return a value to it's call. The return statement returns a value back to the part of the program that called it.


5.32 Look at the following function definition:
def do_something(number): return number * 2
a. What is the name of the function?
The name of the function is do_something.


b. What does the function do?
The function returns it's argument multiplied by 2.


c. Given the function definition, what will the following statement display?
print(do_something(10))
The statement will print '100'.


5.33 What is a Boolean function?
A boolean function return a true/false value.


5.34 What import statement do you need to write in a program that uses the math module?
import math


5.35 Write a statement that uses a math module function to get the square root of 100
and assigns it to a variable.
square_root = math.sqrt(100)


5.36 Write a statement that uses a math module function to convert 45 degrees to radians and assigns the value to a variable.
toRadians = math.radians(45)

